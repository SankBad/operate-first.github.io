{"componentChunkName":"component---src-templates-doc-js","path":"/blueprints/continuous-delivery/","result":{"data":{"site":{"siteMetadata":{"title":"Operate First"}},"mdx":{"id":"4aef554a-7b4f-5583-aed5-d3cbd1c53fe1","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Continous Delivery\"), mdx(\"p\", null, \"This repository contains an opinionated reference architecture to setup, manage and operate a continous delivery\\npipeline. The continous delivery pipeline not only consists of the Tekton/OpenShift Pipelines parts, but also\\nsupporting Cyborg for maintaining the source code (creating releases/tags, updating dependencies, \\u2026).\"), mdx(\"h3\", null, \"Prerequisites\"), mdx(\"p\", null, \"Kustomize 3.8.1+\\nSOPS 3.4.0+\\nKSOPS 2.1.2+\"), mdx(\"p\", null, \"Ensure you have the key to decrypt secrets.\"), mdx(\"h3\", null, \"GPG Key access\"), mdx(\"p\", null, \"This repo encrypts secrets using a dev test key, you can find the test key in examples/key.asc folder.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-text\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$ base64 -d < examples/key.asc | gpg --import\"))), mdx(\"p\", null, \"You will need to import this key to be able to decrypt the contents of the secrets using sops.\"), mdx(\"p\", null, \"Do NOT use this gpg key for production purposes.\"), mdx(\"h2\", null, \"Policy Based Control of resources\"), mdx(\"p\", null, \"All resources created by kustomize should pass OPA conftest, you could check this by\\nusing: \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"kustomize build --enable_alpha_plugins . | conftest test --policy ../policy -\"), \".\"), mdx(\"h2\", null, \"TODO\"), mdx(\"ul\", {\n    \"className\": \"pf-c-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"outline how to use the op1st toolbox container to run tools like conftest and kustomize\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","description":null}}},"pageContext":{"id":"4aef554a-7b4f-5583-aed5-d3cbd1c53fe1","slug":"README"}},"staticQueryHashes":["117426894","3000541721","3753692419"]}